@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using BlazorSurveys.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject HubConnection HubConnection

<h1 class="mb-4">Real-Time surveys with Blazor and SignalR</h1>

<button class="btn btn-primary mb-4" @onclick="AddSurvey"><i class="oi oi-plus" /> Add Survey</button>

@if (surveys == null)
{
    <p><em>Loading...</em></p>
} else {
  <div class="row row-cols-1 row-cols-md-2">
    @foreach (var survey in surveys.OrderBy(s => s.ExpiresAt))
    {
      <div class="col mb-4">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">@survey.Title</h5>
          </div>
          <ul class="list-group list-group-flush">
            @foreach (var option in survey.Options)
            {
              <li class="list-group-item">@option</li>
            }
          </ul>
          <div class="card-body">
            <button class="btn btn-primary" @onclick="@(() => GoToSurvey(survey.Id))">View survey</button>
            <p class="card-text float-right">
              @if (survey.IsExpired){
                <strong>Expired</strong>
              } else {
                <small class="text-muted">Expires in @(Math.Ceiling(survey.ExpiresAt.Subtract(DateTime.Now).TotalMilliseconds / 60000)) min</small>
              }
            </p>
          </div>
        </div>
      </div>
    }
  </div>
}

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    private Survey[] surveys;

    protected override async Task OnInitializedAsync()
    {
        surveys = await Http.GetFromJsonAsync<Survey[]>("api/survey");
        HubConnection.On<Survey>("SurveyAdded", survey =>
        {
            surveys = surveys
                .Where(s => s.Title != survey.Title)
                .Append(survey)
                .ToArray();
            StateHasChanged();
        });
    }

    private void AddSurvey()
    {
        NavigationManager.NavigateTo("add-survey");
    }

    private void GoToSurvey(Guid surveyId)
    {
        NavigationManager.NavigateTo($"survey-details/{surveyId}");
    }

}